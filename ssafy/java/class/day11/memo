TCP/IP

TCP - 전송이 보장

UDP - 전송이 보장되지 않음 (Broadcasting에 많이 사용됨)

응용 계층 - HTTP, FTP
(표현 계층)
(세션 계층)
전송 계층 - TCP, UDP
네트워크 계층 - IP
데이터 링크 계층
물리 계층

Network는 두 컴퓨터가 연결되는 공간
A 컴퓨터의 어떤 프로그램이 B컴퓨터의 어떤 프로그램과 연결되기 위해서는 Port라는 연결점이 필요
이 Port를 담당하는 프로그램 모듈을 Socket이라고 함

Server는 특정 IP와 특정 Port를 통해서 특정 Protocol로 Service하고
Client는 Server의 IP와 Port를 알고, 접속한 후 약속된 Protocol로 통신함

도메인 서버에서 IP를 도메인 주소로 매핑

1024 이하의 포트들은 전부 예약되어 있음

IP - 4바이트
00000000 00000000 00000000 00000000

A : 00000000 00000000 00000000 00000000 ~ 01111111 00000000 00000000 00000000 (0 ~ 127)
	255.0.0.0 => 대그룹 네트워크
	
B : 10000000 00000000 00000000 00000000 ~ 10111111 00000000 00000000 00000000 (128 ~ 191)
	255.255.0.0 => 65535 중그룹 네트워크

C : 11000000 00000000 00000000 00000000 ~ 11011111 00000000 00000000 00000000 (192 ~ 223)
	255 - 2 => 253 가지
	192.233.222.0 => 사용안됨. 네트워크 분류용 사용
	192.233.222.255 => 내 네트워크의 가장 마지막 IP => 브로드캐스팅 IP로 사용됨 (UDP)

	192.233.222.222 => 192.233.222.0
	192.233.221.111 => 192.233.221.0
	192.233.222.123 => 192.233.222.0 // 서브넷 마스크를 통과시킨 값이 같으면 같은 네트워크
	
	11011100
	&11111111
	
	사브넷 마스크(&) 255.255.255.0  =>  11111111 11111111 11111111 00000000 => 소그룹 네트워크
	
D : 11000000 00000000 00000000 00000000 ~ 11011111 00000000 00000000 00000000 (224 ~ 239)
	멀티캐스팅 IP => 특정 컴퓨터에 사용되는 것이 아님

E : 사용안함


Port - 2바이트 양의 정수로 표시  0 ~ 65535

0 ~ 1023 : 시스템(운영체제) Port, 80 : web, 21 : ftp 예약 Port

1024 ~ 9999 : 상용화(이미 배포된 프로그램) Port 8080 : tomcat, 1592 : 오라클, 3306 : Mysql

10000 ~ : user Port => 사용자가 편하게 사용할 수 있는 Port


- XML
Well formed : 문법적 오류가 없음
valid : 내 마음대로 정의한 tag들에 대한 DTD 파일을 지정해줘야 비로소 valid하게 되는 것

XML 문서는 HTML과 다르게 표현에 국한되지 않고, 자료의 표현, 전달, 공유 등에 적합

자유롭게 tag 생성이 가능하기 때문에, 서로 중복되는 tag가 발생할 수 있음
-> 사용 tag에 대한 prefix와 그 prefix에 대한 Namespace를 사용함

XML Parser라는 라이브러리를 사용하여 해당 XML에 사용된 tag를 구별하고, 그 안에 있는 값들을 읽음
1. SAX : 문서를 한번 쭉 읽으면서 tag 발생별로 처리하는 방법
2. DOM : 문서를 다 읽고 난 후, 문서 구조 전체를 자료구조에 저장하여 탐색하면서 처리하는 방법

